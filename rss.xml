<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Wasi Master&#39;s Blog</title>
    <link>http://wasi-master.github.io/blog/</link>
    
    <atom:link href="http://wasi-master.github.io/blog/rss.xml" rel="self" type="application/rss+xml"/>
    
    <description>The personal blog of Wasi Master aka. Arian Mollik Wasi</description>
    <pubDate>Tue, 06 Feb 2024 18:13:35 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Viewing Python Packages&#39; Information Directly From the Terminal</title>
      <link>http://wasi-master.github.io/blog/2024/02/07/viewing-python-packages-information-directly-from-the-terminal/</link>
      <guid>http://wasi-master.github.io/blog/2024/02/07/viewing-python-packages-information-directly-from-the-terminal/</guid>
      <pubDate>Tue, 06 Feb 2024 18:13:35 GMT</pubDate>
      
      <description>How to easily see extensive information about any python package directly from the terminal</description>
      
      
      
      <content:encoded><![CDATA[<h3 id="Why-do-I-need-this"><a href="#Why-do-I-need-this" class="headerlink" title="Why do I need this?"></a>Why do I need this?</h3><p>As a programmer, you probably know how to use a terminal. Sometimes <em>you just don’t want to have to open up a browser</em> only to check how many downloads your favorite python package has, or you just wanna see how to do something in a specific library such as <a href="https://www.djangoproject.com/" title="Django makes it easier to build better web apps more quickly and with less code.">django</a> or maybe <em>you want to see if a package exists and see it’s description before you install it</em>. I’ve also faced these issues so <strong>I went out to create my own library to interface  <a href="https://pypi.org/" title="The Python Package Index, abbreviated as PyPI (/ˌpaɪpiˈaɪ/) is the official third-party software repository for Python">PyPI</a> within a terminal</strong>. </p><p><strong>I <em>do not earn nor do I want to earn any gains</em> from this, this is purely for the users’ productivity</strong></p><h3 id="How-does-it-look"><a href="#How-does-it-look" class="headerlink" title="How does it look?"></a>How does it look?</h3><p>Here’s an example of how the information command looks:</p><p><img src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qgr3mb9bjz6cwworzvf4.png" alt="Image showing how the package info looks"></p><p>And for the search command:</p><p><img src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hx5ip7cgpgkic5krmj9k.png" alt="Image showing how the package search looks"></p><p><strong>For screenshots of all the other 15+ commands, be sure to check out <a href="https://wasi-master.github.io/pypi-command-line/usage/">the documentation</a></strong></p><h3 id="How-does-it-work"><a href="#How-does-it-work" class="headerlink" title="How does it work?"></a>How does it work?</h3><p>How the information command works is that it uses the <a href="https://warehouse.pypa.io/api-reference/json.html" title="Documentation for PyPI JSON API">PyPI API</a> to fetch general information about the package. Then it uses the <a href="https://docs.github.com/en/rest/reference/repos#get-a-repository" title="Documentation page for getting a repo information from the GitHub API">GitHub API</a> to get information such as the stars, forks, size, etc. Then, at last, it uses the <a href="https://pypistats.org/api/" title="PyPI Stats provides Analytics for PyPI packages">PyPI Stats API</a> to get the download count per month, week, and day. Then it combines all these to form a beautiful display with rich colors, panels, hyperlinks, and much more! It also implements caching logic so usage in long coding sessions can stay smoother than ever!</p><h3 id="How-do-I-install-it"><a href="#How-do-I-install-it" class="headerlink" title="How do I install it?"></a>How do I install it?</h3><p>You can install it just by running</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pypi-command-line</span><br></pre></td></tr></table></figure><p>Then you can use the <code>pypi -h</code> command to test it out. For more information <strong>see the <a href="https://wasi-master.github.io/pypi-command-line/install/">installation page on the docs</a></strong></p><p>And to test out the package info feature you can run.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pypi info Django</span><br></pre></td></tr></table></figure><p>`Django is just, for example, <em>you can see info for any package on pypi</em></p><h3 id="Can-I-see-the-source-code-please"><a href="#Can-I-see-the-source-code-please" class="headerlink" title="Can I see the source code, please?"></a>Can I see the source code, please?</h3><p>The source code is available on GitHub: <a href="https://github.com/wasi-master/pypi-command-line">wasi-master/pypi-command-line</a></p><h3 id="Ending-Notes"><a href="#Ending-Notes" class="headerlink" title="Ending Notes"></a>Ending Notes</h3><p>But wait there’s more, It has tons of <a href="https://wasi-master.github.io/pypi-command-line/smart_features/">smart features</a> that help you in many ways, It has <a href="https://wasi-master.github.io/pypi-command-line/usage/">a lot of other commands</a> too such as <a href="https://wasi-master.github.io/pypi-command-line/usage/#browse"> <code>browse</code> </a>, <a href="https://wasi-master.github.io/pypi-command-line/usage/#information"> <code>information</code> </a>, <a href="https://wasi-master.github.io/pypi-command-line/usage/#description"> <code>description</code> </a>, <a href="https://wasi-master.github.io/pypi-command-line/usage/#search"> <code>search</code> </a>, <a href="https://wasi-master.github.io/pypi-command-line/usage/#wheels"> <code>wheels</code> </a>, <a href="https://wasi-master.github.io/pypi-command-line/usage/#releases"> <code>releases</code> </a>, <a href="https://wasi-master.github.io/pypi-command-line/usage/#largest-files"> <code>largest-files</code> </a>, <a href="https://wasi-master.github.io/pypi-command-line/usage/#regex-search"> <code>regex-search</code> </a>, <a href="https://wasi-master.github.io/pypi-command-line/usage/#version"> <code>version</code> </a>, <a href="https://wasi-master.github.io/pypi-command-line/usage/#cache-info"> <code>cache-info</code> </a>, <a href="https://wasi-master.github.io/pypi-command-line/usage/#cache-refresh"> <code>cache-refresh</code> </a>, <a href="https://wasi-master.github.io/pypi-command-line/usage/#cache-clear"> <code>cache-clear</code> </a>, <a href="https://wasi-master.github.io/pypi-command-line/usage/#new-packages"> <code>new-packages</code> </a>, <a href="https://wasi-master.github.io/pypi-command-line/usage/#new-releases"> <code>new-releases</code> </a>, <a href="https://wasi-master.github.io/pypi-command-line/usage/#read-the-docs"> <code>read-the-docs</code> </a></p>]]></content:encoded>
      
      
      
      
      <comments>http://wasi-master.github.io/blog/2024/02/07/viewing-python-packages-information-directly-from-the-terminal/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>The New Programming Languages You Should Be Using Instead of Older Ones</title>
      <link>http://wasi-master.github.io/blog/2022/02/02/the-new-programming-languages-you-should-be-using-instead-of-older-ones/</link>
      <guid>http://wasi-master.github.io/blog/2022/02/02/the-new-programming-languages-you-should-be-using-instead-of-older-ones/</guid>
      <pubDate>Wed, 02 Feb 2022 11:59:30 GMT</pubDate>
      
      <description>&lt;p&gt;So programming as a whole has existed for a long time. Fun Fact: The first computer programming language was created in 1883 by Ada Lovelace and Charles Babbage. But the popular langauges we see nowadays are far more recent but still very old, The programming language C first appeared in 1972, that is 50 years ago. Here I’ll be telling you about the newer counterparts to the languages we know and love.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>So programming as a whole has existed for a long time. Fun Fact: The first computer programming language was created in 1883 by Ada Lovelace and Charles Babbage. But the popular langauges we see nowadays are far more recent but still very old, The programming language C first appeared in 1972, that is 50 years ago. Here I’ll be telling you about the newer counterparts to the languages we know and love.</p><span id="more"></span><h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><p><strong>Newer Alternative</strong>: Kotlin</p><p>Unless you are working in an environment where you <em>have to</em> learn java to do your job, you should use kotlin instead. This language was created in 2011 by JetBrains. In 2018, Google declared Kotlin as the default language for Android development.</p><p>Now java is not going to go away anytime soon. Java has more support and documentation available since it has existed for a longer time compared to Kotlin. But the industry is quickly switching over to Kotlin for Android development and you should also use Kotlin.</p><h2 id="C-C"><a href="#C-C" class="headerlink" title="C/C++"></a>C/C++</h2><p><strong>Newer Alternative</strong>: Rust</p><p>The programming. With C++, memory safety is handled by the developer whereas Rust has presistent safety bounds that can be lifted by using the keyword <code>unsafe</code>.  It got the top position in “The Most Loved” category of Stack Overflow’s 2016 and 2017 developer survey. It is very much similar to C++ and easy-to-learn syntax.</p><h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><p><strong>Newer Alternative</strong>: TypeScript</p><p>Comparing TypeScript vs JavaScript, JavaScript is a lightweight, interpreted, dynamic language for web design. It is utilized in web app development for augmenting HTML web pages. In contrast, TypeScript acts as a superset of JavaScript.This states that Typescript is JavaScript + some other traits.</p><p>Some notable features include: Static Typing, Enhanced IDE support, Type Inference, Interoperability, Strict Null Examination</p><h2 id="Objective-C-for-iOS"><a href="#Objective-C-for-iOS" class="headerlink" title="Objective-C (for iOS)"></a>Objective-C (for iOS)</h2><p><strong>Newer Alternative</strong>: Swift</p><p>Apple states that Swift is almost 2.6 times faster than Objective C. The speed at which one can code using Swift is significantly higher than on Objective C. The syntax on Swift is much simpler and direct.</p>]]></content:encoded>
      
      
      <category domain="http://wasi-master.github.io/blog/categories/opinions/">Opinions</category>
      
      
      <category domain="http://wasi-master.github.io/blog/tags/languages/">languages</category>
      
      <category domain="http://wasi-master.github.io/blog/tags/beginner/">beginner</category>
      
      
      <comments>http://wasi-master.github.io/blog/2022/02/02/the-new-programming-languages-you-should-be-using-instead-of-older-ones/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>5 Python Tips That New Programmer Would Love</title>
      <link>http://wasi-master.github.io/blog/2022/01/10/5-python-tips-that-new-programmer-would-love/</link>
      <guid>http://wasi-master.github.io/blog/2022/01/10/5-python-tips-that-new-programmer-would-love/</guid>
      <pubDate>Sun, 09 Jan 2022 18:31:29 GMT</pubDate>
      
      <description>&lt;p&gt;So you’re new to python programming? and you want some tips? then you’ve come to the right place. In this post, I’ll provide 5 python tips that I see beginners make a lot. And trust me when I say this, I’ve taught a lot (and I mean a lot!) of people. I’ve seen an immense range of code ranging from pure beauty to absolute trash.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>So you’re new to python programming? and you want some tips? then you’ve come to the right place. In this post, I’ll provide 5 python tips that I see beginners make a lot. And trust me when I say this, I’ve taught a lot (and I mean a lot!) of people. I’ve seen an immense range of code ranging from pure beauty to absolute trash.</p><span id="more"></span><h2 id="1-Follow-PEP-8"><a href="#1-Follow-PEP-8" class="headerlink" title="1. Follow PEP-8"></a>1. Follow PEP-8</h2><p>PEP-8 is a PEP (Python Enhancement Proposal) that suggests coding conventions for python code. Like a style guide for python code. Code is read much more often than it’s written, and you should try to make your code as readable as possible, even for you. The guide can be found at <a href="https://www.python.org/dev/peps/pep-0008/">www.python.org/dev/peps/pep-0008/</a>, and you can see a more beautified version at <a href="https://pep8.org/">pep8.org</a></p><h2 id="2-Ask-good-questions"><a href="#2-Ask-good-questions" class="headerlink" title="2. Ask good questions"></a>2. Ask good questions</h2><p>In your journey, you’ll often get stuck doing something. Especially if you try to code by yourself. In this situation, you might want to search online for solutions first. Then if there aren’t any solutions you may be tempted to ask someone, maybe in a Discord server, maybe some friend you know that does programming. In any case, you should always ask good questions, there is a <a href="https://stackoverflow.com/help/how-to-ask">great guide from stackoverflow</a> that’ll help you with this. And don’t ask a <a href="https://xyproblem.info/">XY problem</a></p><blockquote><p>A prudent question is one-half of wisdom.<br>- Francis Bacon</p></blockquote><h2 id="3-Don’t-do-import-or-from-…-import"><a href="#3-Don’t-do-import-or-from-…-import" class="headerlink" title="3. Don’t do import * or from … import *"></a>3. Don’t do <code>import *</code> or <code>from … import *</code></h2><p>Now at first, you may think, importing everything makes it so easy, less typing, less hassle. But let me stop you right there. This may seem like it’ll make it easy, but you’ll regret it later down the line. Doing this makes it hard to figure out which functions are imported (and from where), and which functions are custom-defined. It also makes it hard for 3rd party tools like <code>pyflakes</code> to do static analysis with your imports. This WILL import a lot of stuff you’ll never use and will clutter up the namespace. As a concrete example, many users of NumPy have been bitten by <code>numpy.any</code> shadowing <code>any</code> when they do <code>from numpy import *</code>. According to the Zen of Python:</p><blockquote><p>Explicit is better than implicit.</p></blockquote><p><a href="https://docs.python.org/3/tutorial/modules.html#:~:text=note%20that%20in%20general%20the%20practice%20of%20importing%20*%20from%20a%20module%20or%20package%20is%20frowned%20upon%2C%20since%20it%20often%20causes%20poorly%20readable%20code.%20however%2C%20it%20is%20okay%20to%20use%20it%20to%20save%20typing%20in%20interactive%20sessions.">And even the official documentation for python discourages this</a></p><h2 id="4-Read-the-documentation"><a href="#4-Read-the-documentation" class="headerlink" title="4. Read the documentation"></a>4. Read the documentation</h2><p>Beginners, especially people whose native language is not English, don’t really want to read the documentation on stuff. Now, this can be a very bad thing. You should always use what’s given to you. Reading documentation could bring out details you never could have otherwise found out. If you can’t find anything in the documentation you might also want to look at the source code. But the main thing is you should learn to read the documentation. If your English is weak then you may want to use <a href="https://support.google.com/translate/answer/2534559">Google Translate’s website translation tool</a></p><blockquote><p>The more that you read, the more things you will know. The more that you learn, the more places you’ll go.<br>- Dr. Seuss</p></blockquote><h2 id="5-Always-following-tutorials"><a href="#5-Always-following-tutorials" class="headerlink" title="5. Always following tutorials"></a>5. Always following tutorials</h2><p>Tutorials can be good, tutorials can be bad. Especially in the case of programming. There is always more than one way to do things and if a tutorial shows a bad method then you’ll learn it and remember it thinking it is really good but in reality, it was not that good. Always research on your own first, I’ve seen countless outdated tutorials that show stuff that used to exist but don’t exist anymore, see if the tutorial you’re watching is recent or not. And try not relying on tutorials too much since you want to make stuff yourself and not be taught like a puppet what to do. In the real world, there won’t be a guide you can just follow and everything would be done just by itself</p><blockquote><p>No one achieves great things by following the crowd. Have a spine. Strike your own path.<br>- Robert Kiyosaki</p></blockquote><p>and</p><blockquote><p>It’s easy to stand with the crowd, it takes courage to stand alone.<br>- Gandhi</p></blockquote>]]></content:encoded>
      
      
      <category domain="http://wasi-master.github.io/blog/categories/instructions/">Instructions</category>
      
      
      <category domain="http://wasi-master.github.io/blog/tags/tutorial/">tutorial</category>
      
      <category domain="http://wasi-master.github.io/blog/tags/programming/">programming</category>
      
      
      <comments>http://wasi-master.github.io/blog/2022/01/10/5-python-tips-that-new-programmer-would-love/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>How I Made a Website That Removes Ads, Bypassed Paywalls for Articles</title>
      <link>http://wasi-master.github.io/blog/2022/01/07/how-i-made-a-website-that-removes-ads-bypassed-paywalls-for-articles/</link>
      <guid>http://wasi-master.github.io/blog/2022/01/07/how-i-made-a-website-that-removes-ads-bypassed-paywalls-for-articles/</guid>
      <pubDate>Fri, 07 Jan 2022 04:41:02 GMT</pubDate>
      
      <description>&lt;p&gt;Yesterday I built a simple website that takes in a URL and removes all ads and paywalled content and you can host it locally. The UI is very nice and pleasing. It uses google’s &lt;code&gt;User-Agent&lt;/code&gt; to pretend it’s google and gets the same content that the URL would give to google.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Yesterday I built a simple website that takes in a URL and removes all ads and paywalled content and you can host it locally. The UI is very nice and pleasing. It uses google’s <code>User-Agent</code> to pretend it’s google and gets the same content that the URL would give to google.</p><span id="more"></span><h2 id="Motive"><a href="#Motive" class="headerlink" title="Motive"></a>Motive</h2><p>I read a lot of articles, some of them have a paywall. And I don’t really want to pay money to just read one article. If it was something I use daily then I could consider paying for it but for only once, no. So I usually go to <a href="https://12ft.io/">12ft.io</a> for that but that website doesn’t work for New York Times so I wondered if there were any alternatives. Then I thought to myself why wouldn’t I be able to make one myself? So here we are now.</p><h2 id="Their-Implementation"><a href="#Their-Implementation" class="headerlink" title="Their Implementation"></a>Their Implementation</h2><p>I first scrolled to the bottom of the <a href="https://12ft.io/">12ft.io</a> page and saw an explanation of how it works:</p><blockquote><p>The idea is pretty simple, news sites want Google to index their content so it shows up in search results. So they don’t show a paywall to the Google crawler. We benefit from this because the Google crawler will cache a copy of the site every time it crawls it. All we do is show you that cached, un-paywalled version of the page.</p></blockquote><p>So it depends on google crawler’s cache? Cool. But what if the site isn’t cached? I tried it with my own blog and it worked but couldn’t show the full page for some reason.</p><h2 id="My-Implementation"><a href="#My-Implementation" class="headerlink" title="My Implementation"></a>My Implementation</h2><p>So they load the cached version of the page the google crawler loaded.<br>My website pretends to be the google crawler and no caching is required. And it can optionally cache those pages locally and there’s no need for google to get involved.</p><h2 id="So-how-to-use-it"><a href="#So-how-to-use-it" class="headerlink" title="So how to use it?"></a>So how to use it?</h2><p>You can click the image below to go to the GitHub repo containing the project and in there you’ll find instructions on how to set this up and how to use it.</p><p><a href="https://github.com/wasi-master/13ft"><img src="https://gh-card.dev/repos/wasi-master/13ft.svg" alt="wasi-master/13ft - GitHub"></a></p>]]></content:encoded>
      
      
      <category domain="http://wasi-master.github.io/blog/categories/instructions/">Instructions</category>
      
      
      <category domain="http://wasi-master.github.io/blog/tags/projects/">projects</category>
      
      
      <comments>http://wasi-master.github.io/blog/2022/01/07/how-i-made-a-website-that-removes-ads-bypassed-paywalls-for-articles/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>How to Remember So Many Programming Languages</title>
      <link>http://wasi-master.github.io/blog/2022/01/05/how-i-remember-so-many-programming-languages/</link>
      <guid>http://wasi-master.github.io/blog/2022/01/05/how-i-remember-so-many-programming-languages/</guid>
      <pubDate>Tue, 04 Jan 2022 18:27:34 GMT</pubDate>
      
      <description>&lt;p&gt;If you saw my previous post on how I learn new programming languages you may be wondering how (or even if) I remember all these programming languages, now this is a valid question as the saying goes &lt;em&gt;“Jack of all trades and master of none though oftentimes better than master of one”&lt;/em&gt;. That’s exactly what I am gonna discuss today&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>If you saw my previous post on how I learn new programming languages you may be wondering how (or even if) I remember all these programming languages, now this is a valid question as the saying goes <em>“Jack of all trades and master of none though oftentimes better than master of one”</em>. That’s exactly what I am gonna discuss today</p><span id="more"></span><h2 id="About-the-saying…"><a href="#About-the-saying…" class="headerlink" title="About the saying…"></a>About the saying…</h2><blockquote><p><em>Jack of all trades and master of none though oftentimes better than master of one</em></p></blockquote><p>From Wikipedia: “Jack of all trades, master of none” is a figure of speech used about a person who has dabbled in many skills, rather than gaining expertise by focusing on one.</p><p>Read this <a href="https://www.wikiwand.com/en/Jack_of_all_trades,_master_of_none">wikipedia article</a> to learn more.</p><p>This is the same for me to some extent, I know a bunch of programming languages but I would not say I am a master of any of them other than Python. I can say that in other languages I know enough to do simple tasks, things like Data Types, Variables, Keywords, Logical and Arithmetical Operators, If else conditions, Loops, Arrays, Functions. But just knowing that isn’t gonna make you a master in any language.</p><h2 id="So-what-do-I-need-to-become-the-master"><a href="#So-what-do-I-need-to-become-the-master" class="headerlink" title="So what do I need to become the master"></a>So what do I need to become the master</h2><h3 id="Standard-Library"><a href="#Standard-Library" class="headerlink" title="Standard Library"></a>Standard Library</h3><p>The first thing is to learn the standard library it has and what you can do with those. For example the <a href="https://docs.python.org/3/library/">python standard library documentation</a> contains more than 200 libraries (Run <code>help(&#39;modules&#39;)</code> in repl) and the <a href="https://www.w3schools.com/nodejs/ref_modules.asp">node.js built-in module list</a> has more than 25. There are stuff like <a href="https://docs.python.org/3/library/stringprep.html">stringprep</a>, <a href="https://docs.python.org/3/library/rlcompleter.html">rlcompleter</a>, <a href="https://docs.python.org/3/library/tabnanny.html">tabnanny</a>, <a href="https://docs.python.org/3/library/reprlib.html">reprlib</a>, <a href="https://docs.python.org/3/library/linecache.html">linecache</a>, <a href="https://docs.python.org/3/library/imghdr.html">imghdr</a>, <a href="https://docs.python.org/3/library/fileinput.html">fileinput</a>, <a href="https://docs.python.org/3/library/contextvars.html">contextvars</a>, <a href="https://docs.python.org/3/library/mmap.html">mmap</a> are just to name a few that are unheard of in normal day to day coding.</p><h3 id="3rd-party-libraries"><a href="#3rd-party-libraries" class="headerlink" title="3rd party libraries"></a>3rd party libraries</h3><p>Another thing to know to become a master is 3rd party libraries, these are not officially made by the language developers.</p><p>For python things like requests, pylint/flake8/pep8, numpy, pandas, Django/flask, Pillow, matplotlib</p><h3 id="Being-able-to-make-almost-anything"><a href="#Being-able-to-make-almost-anything" class="headerlink" title="Being able to make (almost) anything"></a>Being able to make (almost) anything</h3><p>You should be able to code stuff easily as long as it isn’t based on other things such as mathematics.</p><h2 id="What-about-you"><a href="#What-about-you" class="headerlink" title="What about you?"></a>What about you?</h2><p>I would say I am a “master” in python and nothing else really, I do sure know a lot of stuff but I would not consider myself a master in most of those. Even then there are things that I still don’t know and am discovering regularly in python. I often see myself searching google for stuff in other languages since I forget them but googling shouldn’t be seen as a bad thing. The main purpose is to make something. Things I use frequently are things I remember and things I don’t use frequently, I often forget.</p><blockquote><p>To be able to forget means sanity.<br>- Jack London, The Star Rover</p></blockquote><h2 id="What-about-me"><a href="#What-about-me" class="headerlink" title="What about me?"></a>What about me?</h2><p>So if you want to remember stuff you have to practice. Once I had stopped using python for a month and after that, I had to try to remember some stuff and search google because I forgot them. Practice makes perfect.</p>]]></content:encoded>
      
      
      <category domain="http://wasi-master.github.io/blog/categories/instructions/">Instructions</category>
      
      
      <category domain="http://wasi-master.github.io/blog/tags/about-me/">about me</category>
      
      <category domain="http://wasi-master.github.io/blog/tags/intermediate/">intermediate</category>
      
      <category domain="http://wasi-master.github.io/blog/tags/languages/">languages</category>
      
      <category domain="http://wasi-master.github.io/blog/tags/memory/">memory</category>
      
      
      <comments>http://wasi-master.github.io/blog/2022/01/05/how-i-remember-so-many-programming-languages/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>How Do I Learn New Programming Languages So Easily?</title>
      <link>http://wasi-master.github.io/blog/2022/01/03/how-i-learn-new-programming-languages/</link>
      <guid>http://wasi-master.github.io/blog/2022/01/03/how-i-learn-new-programming-languages/</guid>
      <pubDate>Mon, 03 Jan 2022 16:16:46 GMT</pubDate>
      
      <description>&lt;p&gt;So if you see my &lt;a href=&quot;https://www.linkedin.com/in/wasimaster&quot;&gt;linkedin profile&lt;/a&gt; You may see that I know a lot of programming languages and frameworks. And you may (or may not) be wondering how I learned all those at such a young age or do I even know all those. The answer to the first question will be given in this post and the answer to the second question would be given in my next post&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>So if you see my <a href="https://www.linkedin.com/in/wasimaster">linkedin profile</a> You may see that I know a lot of programming languages and frameworks. And you may (or may not) be wondering how I learned all those at such a young age or do I even know all those. The answer to the first question will be given in this post and the answer to the second question would be given in my next post</p><span id="more"></span><h2 id="Prerequisites-to-learn-new-programming-languages"><a href="#Prerequisites-to-learn-new-programming-languages" class="headerlink" title="Prerequisites to learn new programming languages"></a>Prerequisites to learn new programming languages</h2><p>The first thing I’d suggest is for you to become fluent in coding fundamentals. After you learn to code in one programming language, other languages will be easier to learn.</p><blockquote><p>A journey of a thousand miles begins with a single step<br>- Chinese proverb</p></blockquote><p>You should start with one than learn more. You must remember, computational thinking and the coding fundamentals apply to every programming language no matter the complexity. If you already know one language you can move on the learning new languages.</p><h2 id="First-learn-the-basics"><a href="#First-learn-the-basics" class="headerlink" title="First learn the basics"></a>First learn the basics</h2><p>First, learn the basics of the language then move on to libraries and frameworks. At first, if you start with too much then you will give up easily. A good site to learn the basics of a programming language really fast is <a href="https://learnxinyminutes.com/">learnxinyminutes</a> Or if you want a broader selection containing programming languages, frameworks mathematics, etc. check out <a href="https://www.codecademy.com/resources/cheatsheets/all">codecademy’s list of cheat sheets</a></p><h2 id="Then-code-something"><a href="#Then-code-something" class="headerlink" title="Then code something"></a>Then code something</h2><p>The next thing you should do is to code something other than Hello World. Try new projects, see <a href="https://github.com/karan/Projects#readme">a list of projects to code</a> and pick one then try it. You should try a few more projects until you think you understand all concepts. I keep a <a href="https://github.com/wasi-master/coding-challenges">git repository of all of these projects I do</a>, You may also want to do the same. Speaking of understanding all concepts</p><h2 id="You-must-make-sure-you-understand-what-you’re-doing"><a href="#You-must-make-sure-you-understand-what-you’re-doing" class="headerlink" title="You must make sure you understand what you’re doing"></a>You must make sure you understand what you’re doing</h2><p>The common mistake I often see beginners make is that they use tutorials too much, I do agree tutorials are good for teaching a specific thing in a specific way. But for programming, you must be creative and be able to build your own stuff too not just stuff made by others in tutorials. Copying code from StackOverflow is also similar, You should not copy code you don’t understand, trust me it will cause issues later down the line.</p><h2 id="General-tips"><a href="#General-tips" class="headerlink" title="General tips"></a>General tips</h2><ul><li><strong>Read the documentation</strong><br>  This is something I see a lot of people hate especially people just starting out with programming. documentation is important and you must take advantage of it.</li><li><strong>Coding challenges</strong><br>  You should try coding challenges with your new language with sites such as <a href="https://leetcode.com/">leetcode</a>, <a href="https://exercism.org/">exercism</a>, <a href="https://edabit.com/">edabit</a>, <a href="https://projecteuler.net/archives">project euler</a>, <a href="https://www.codewars.com/">codewars</a>, <a href="https://www.codingame.com/">codingame</a></li><li><strong>Find a coding partner</strong><br>  Find someone that codes in the language you want to learn, this can be a <abbr title="In Real Life">irl</abbr> friend, family, or even a discord buddy</li><li><strong>Learn to ask for help</strong><br>  Whatever language you wish to learn be sure to ask for help when you get stuck somewhere, this can be in <a href="https://stackoverflow.com/">stackoverflow</a> or <a href="https://www.google.com/">Google</a> or ask in programming specific <a href="https://www.reddit.com/">reddit</a> and <a href="https://discord.com/">Discord</a> communities</li><li><strong>Take breaks</strong><br>  You don’t have to sit in front of a computer for hours and hours at a time. Try to take breaks and do the other things you have to do except programming. Sometimes you spend hours and hours to find the bug but you don’t get the solution for your code so it’s good to take a short break. It will restore your focus and help you find solutions to your problems</li></ul>]]></content:encoded>
      
      
      <category domain="http://wasi-master.github.io/blog/categories/instructions/">Instructions</category>
      
      
      <category domain="http://wasi-master.github.io/blog/tags/about-me/">about me</category>
      
      <category domain="http://wasi-master.github.io/blog/tags/tutorial/">tutorial</category>
      
      <category domain="http://wasi-master.github.io/blog/tags/programming/">programming</category>
      
      <category domain="http://wasi-master.github.io/blog/tags/intermediate/">intermediate</category>
      
      <category domain="http://wasi-master.github.io/blog/tags/languages/">languages</category>
      
      <category domain="http://wasi-master.github.io/blog/tags/learn/">learn</category>
      
      <category domain="http://wasi-master.github.io/blog/tags/challenge/">challenge</category>
      
      <category domain="http://wasi-master.github.io/blog/tags/fundamentals/">fundamentals</category>
      
      
      <comments>http://wasi-master.github.io/blog/2022/01/03/how-i-learn-new-programming-languages/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>About Myself</title>
      <link>http://wasi-master.github.io/blog/2022/01/01/about-myself/</link>
      <guid>http://wasi-master.github.io/blog/2022/01/01/about-myself/</guid>
      <pubDate>Fri, 31 Dec 2021 18:00:00 GMT</pubDate>
      
      <description>&lt;p&gt;You somehow have stumbled across my blog and are wondering who is this guy? Is he even a real person? Or you just don’t care and want to go on about your life in that case feel free to click away. In this post, I’ll give an introduction to myself and share some details about my job what I do, what I don’t do, and some nice information about myself with some facts&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>You somehow have stumbled across my blog and are wondering who is this guy? Is he even a real person? Or you just don’t care and want to go on about your life in that case feel free to click away. In this post, I’ll give an introduction to myself and share some details about my job what I do, what I don’t do, and some nice information about myself with some facts</p><span id="more"></span><h2 id="Who-am-I"><a href="#Who-am-I" class="headerlink" title="Who am I?"></a>Who am I?</h2><p>You may know me by my internet pseudonym, Wasi Master. In fact, some may even know my real name is Arian Mollik Wasi. I am a young dude from Bangladesh who is always trying out new things, I am very passionate about programming. I also like 3D Modelling, Animation, Photography, Music, etc.</p><h2 id="What-do-I-do"><a href="#What-do-I-do" class="headerlink" title="What do I do?"></a>What do I do?</h2><p>I am just a 9th grader living in Bangladesh. I currently do not have any job and am not looking for any either. I just want to increase my experience in the things I love and focus on the things I want. I also try to keep at least some basic knowledge in a lot of other fields as well. I love what I do and I am happy with my life.</p><h2 id="What-am-I-good-at"><a href="#What-am-I-good-at" class="headerlink" title="What am I good at?"></a>What am I good at?</h2><p>I love programming in general, I mostly code in Python but I do know a lot of other languages just in case I ever need to understand some code written in those languages as well. I do have excellent knowledge of computers and I can google my way out of problems. I also know adequate English that helps me do all this. I help my friends and family fix all kinds of tech issues and I’m mostly well-liked by them. I believe everyone can do something very well. Here’s a quote from Einstein</p><blockquote><p><strong>Everybody is a genius. But if you judge a fish by its ability to climb a tree, it will live its whole life believing that it is stupid.</strong><br>- Albert Einstein</p></blockquote><h2 id="What-am-I-bad-at"><a href="#What-am-I-bad-at" class="headerlink" title="What am I bad at?"></a>What am I bad at?</h2><p>I would say I am not very good at talking slowly 😅.</p><h2 id="What-is-the-most-important-thing-in-my-life"><a href="#What-is-the-most-important-thing-in-my-life" class="headerlink" title="What is the most important thing in my life?"></a>What is the most important thing in my life?</h2><p>I think the most important thing in my life at the moment is proper education. So I’ll try to focus on education more in the next few years and keep using my computer at a minimum.</p><h2 id="Who-are-the-most-important-people-in-my-life"><a href="#Who-are-the-most-important-people-in-my-life" class="headerlink" title="Who are the most important people in my life?"></a>Who are the most important people in my life?</h2><p>I would say some of the most important people in my life are my younger brother who does not like me at all but I love him and he is very smart compared to other kids I see, so that cheers me up. My mother and father also play a big role in my life. And my home tutor has taught me some important life lessons that I’ll never forget</p><h2 id="What’s-my-definition-of-success"><a href="#What’s-my-definition-of-success" class="headerlink" title="What’s my definition of success?"></a>What’s my definition of success?</h2><p>I like to define success as the opposite of failure. My favorite quote about success is one from Stephen Hawking</p><blockquote><p><strong>However difficult life may seem, there is always something you can do and succeed at.</strong><br>- Stephen Hawking</p></blockquote><h2 id="What-personal-achievements-am-I-most-proud-of"><a href="#What-personal-achievements-am-I-most-proud-of" class="headerlink" title="What personal achievements am I most proud of?"></a>What personal achievements am I most proud of?</h2><p>I would consider <a href="https://github.com/wasi-master/pypi-command-line">pypi-command-line</a>, <a href="https://github.com/wasi-master/wm_bot">my discord bot</a>, <a href="https://wasi-master.github.io/">my website</a>, and <a href="https://github.com/wasi-master/coding-challenges">my coding challenges repo</a>. I have a <a href="https://wasi-master.github.io/#work">bunch of other projects too</a></p><h2 id="How-do-I-want-others-to-see-me"><a href="#How-do-I-want-others-to-see-me" class="headerlink" title="How do I want others to see me?"></a>How do I want others to see me?</h2><p>I want others to see me as a happy, kind, and caring person. I do not want to be hated like others so I try not to hate others</p><blockquote><p><strong>Behind every successful person lies a pack of Haters!</strong><br>- Eminem</p></blockquote><h2 id="What-do-I-think-about-myself"><a href="#What-do-I-think-about-myself" class="headerlink" title="What do I think about myself?"></a>What do I think about myself?</h2><p>I think of myself as a good person and not an evil one. I try to do good deeds whenever I can. And I like to spread positivity</p><h2 id="If-I-have-one-year-left-to-live-what-would-I-do"><a href="#If-I-have-one-year-left-to-live-what-would-I-do" class="headerlink" title="If I have one year left to live, what would I do?"></a>If I have one year left to live, what would I do?</h2><p>I’ll try to visit places that I really want to visit. I’ll also try to pay my debts and apologize to people.</p><h2 id="If-I-have-one-week-left-to-live-what-would-I-do"><a href="#If-I-have-one-week-left-to-live-what-would-I-do" class="headerlink" title="If I have one week left to live, what would I do?"></a>If I have one week left to live, what would I do?</h2><p>I’ll do anything I want, and be reckless I guess. I’d also apologize to people if I owe them an apology.</p><h2 id="If-I-have-one-day-left-to-live-what-would-I-do"><a href="#If-I-have-one-day-left-to-live-what-would-I-do" class="headerlink" title="If I have one day left to live, what would I do?"></a>If I have one day left to live, what would I do?</h2><p>I’d make sure my friends and family know about this and then spend the day with them</p><h2 id="If-I-have-one-minute-left-to-live-what-would-I-do"><a href="#If-I-have-one-minute-left-to-live-what-would-I-do" class="headerlink" title="If I have one minute left to live, what would I do?"></a>If I have one minute left to live, what would I do?</h2><p>I’ll just sleep for one whole minute and think about what I have done in my life.</p>]]></content:encoded>
      
      
      <category domain="http://wasi-master.github.io/blog/categories/introduction/">Introduction</category>
      
      
      <category domain="http://wasi-master.github.io/blog/tags/about-me/">about me</category>
      
      <category domain="http://wasi-master.github.io/blog/tags/master/">master</category>
      
      <category domain="http://wasi-master.github.io/blog/tags/life/">life</category>
      
      
      <comments>http://wasi-master.github.io/blog/2022/01/01/about-myself/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
